# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'thik5.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setWindowModality(QtCore.Qt.NonModal)
        MainWindow.setEnabled(True)
        MainWindow.resize(400, 554)
        MainWindow.setMinimumSize(QtCore.QSize(400, 500))
        MainWindow.setMaximumSize(QtCore.QSize(892, 930))
        font = QtGui.QFont()
        font.setFamily("Rubik")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        font.setStrikeOut(False)
        font.setKerning(True)
        MainWindow.setFont(font)
        MainWindow.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        MainWindow.setMouseTracking(False)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/icons/calculate_black_24dp.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setAutoFillBackground(False)
        MainWindow.setStyleSheet("QWidget {\n"
"    color: white;\n"
"    background-color: #008000;\n"
"    font-family: Rubik;\n"
"    font-size: 16pt;\n"
"    font-weight: 600;\n"
"}")
        MainWindow.setDocumentMode(False)
        MainWindow.setUnifiedTitleAndToolBarOnMac(False)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.pushButton_pls = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_pls.sizePolicy().hasHeightForWidth())
        self.pushButton_pls.setSizePolicy(sizePolicy)
        self.pushButton_pls.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_pls.setStyleSheet("QPushButton {\n"
"    background-color: transparent;\n"
"    border: none;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #03c03c;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #228b22;\n"
"}")
        self.pushButton_pls.setObjectName("pushButton_pls")
        self.gridLayout.addWidget(self.pushButton_pls, 6, 3, 1, 1)
        self.pushButton_svn = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_svn.sizePolicy().hasHeightForWidth())
        self.pushButton_svn.setSizePolicy(sizePolicy)
        self.pushButton_svn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_svn.setStyleSheet("QPushButton {\n"
"    background-color: transparent;\n"
"    border: none;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #03c03c;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #228b22;\n"
"}")
        self.pushButton_svn.setObjectName("pushButton_svn")
        self.gridLayout.addWidget(self.pushButton_svn, 3, 0, 1, 1)
        self.pushButton_prh = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_prh.sizePolicy().hasHeightForWidth())
        self.pushButton_prh.setSizePolicy(sizePolicy)
        self.pushButton_prh.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_prh.setStyleSheet("QPushButton {\n"
"    background-color: transparent;\n"
"    border: none;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #03c03c;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #228b22;\n"
"}")
        self.pushButton_prh.setIconSize(QtCore.QSize(16, 16))
        self.pushButton_prh.setObjectName("pushButton_prh")
        self.gridLayout.addWidget(self.pushButton_prh, 2, 3, 1, 1)
        self.pushButton_ehg = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_ehg.sizePolicy().hasHeightForWidth())
        self.pushButton_ehg.setSizePolicy(sizePolicy)
        self.pushButton_ehg.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_ehg.setStyleSheet("QPushButton {\n"
"    background-color: transparent;\n"
"    border: none;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #03c03c;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #228b22;\n"
"}")
        self.pushButton_ehg.setObjectName("pushButton_ehg")
        self.gridLayout.addWidget(self.pushButton_ehg, 3, 1, 1, 1)
        self.pushButton_nne = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_nne.sizePolicy().hasHeightForWidth())
        self.pushButton_nne.setSizePolicy(sizePolicy)
        self.pushButton_nne.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_nne.setStyleSheet("QPushButton {\n"
"    background-color: transparent;\n"
"    border: none;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #03c03c;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #228b22;\n"
"}")
        self.pushButton_nne.setObjectName("pushButton_nne")
        self.gridLayout.addWidget(self.pushButton_nne, 3, 2, 1, 1)
        self.pushButton_lsk = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_lsk.sizePolicy().hasHeightForWidth())
        self.pushButton_lsk.setSizePolicy(sizePolicy)
        self.pushButton_lsk.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_lsk.setStyleSheet("QPushButton {\n"
"    background-color: transparent;\n"
"    border: none;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #03c03c;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #228b22;\n"
"}")
        self.pushButton_lsk.setIconSize(QtCore.QSize(24, 24))
        self.pushButton_lsk.setObjectName("pushButton_lsk")
        self.gridLayout.addWidget(self.pushButton_lsk, 2, 0, 1, 1)
        self.pushButton_mlt = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_mlt.sizePolicy().hasHeightForWidth())
        self.pushButton_mlt.setSizePolicy(sizePolicy)
        self.pushButton_mlt.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_mlt.setStyleSheet("QPushButton {\n"
"    background-color: transparent;\n"
"    border: none;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #03c03c;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #228b22;\n"
"}")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/icons/close_white_24dp.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_mlt.setIcon(icon1)
        self.pushButton_mlt.setIconSize(QtCore.QSize(24, 24))
        self.pushButton_mlt.setObjectName("pushButton_mlt")
        self.gridLayout.addWidget(self.pushButton_mlt, 3, 3, 1, 1)
        self.pushButton_slesh = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_slesh.sizePolicy().hasHeightForWidth())
        self.pushButton_slesh.setSizePolicy(sizePolicy)
        self.pushButton_slesh.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_slesh.setStyleSheet("QPushButton {\n"
"    background-color: transparent;\n"
"    border: none;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #03c03c;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #228b22;\n"
"}")
        self.pushButton_slesh.setObjectName("pushButton_slesh")
        self.gridLayout.addWidget(self.pushButton_slesh, 2, 2, 1, 1)
        self.pushButton_rsk = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_rsk.sizePolicy().hasHeightForWidth())
        self.pushButton_rsk.setSizePolicy(sizePolicy)
        self.pushButton_rsk.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_rsk.setStyleSheet("QPushButton {\n"
"    background-color: transparent;\n"
"    border: none;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #03c03c;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #228b22;\n"
"}")
        self.pushButton_rsk.setIconSize(QtCore.QSize(24, 24))
        self.pushButton_rsk.setObjectName("pushButton_rsk")
        self.gridLayout.addWidget(self.pushButton_rsk, 2, 1, 1, 1)
        self.pushButton_six = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_six.sizePolicy().hasHeightForWidth())
        self.pushButton_six.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Rubik")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_six.setFont(font)
        self.pushButton_six.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_six.setStyleSheet("QPushButton {\n"
"    background-color: transparent;\n"
"    border: none;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #03c03c;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #228b22;\n"
"}")
        self.pushButton_six.setObjectName("pushButton_six")
        self.gridLayout.addWidget(self.pushButton_six, 5, 2, 1, 1)
        self.pushButton_fiv = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_fiv.sizePolicy().hasHeightForWidth())
        self.pushButton_fiv.setSizePolicy(sizePolicy)
        self.pushButton_fiv.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_fiv.setStyleSheet("QPushButton {\n"
"    background-color: transparent;\n"
"    border: none;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #03c03c;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #228b22;\n"
"}")
        self.pushButton_fiv.setObjectName("pushButton_fiv")
        self.gridLayout.addWidget(self.pushButton_fiv, 5, 1, 1, 1)
        self.pushButton_four = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_four.sizePolicy().hasHeightForWidth())
        self.pushButton_four.setSizePolicy(sizePolicy)
        self.pushButton_four.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_four.setStyleSheet("QPushButton {\n"
"    background-color: transparent;\n"
"    border: none;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #03c03c;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #228b22;\n"
"}")
        self.pushButton_four.setObjectName("pushButton_four")
        self.gridLayout.addWidget(self.pushButton_four, 5, 0, 1, 1)
        self.pushButton_frt = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_frt.sizePolicy().hasHeightForWidth())
        self.pushButton_frt.setSizePolicy(sizePolicy)
        self.pushButton_frt.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_frt.setStyleSheet("QPushButton {\n"
"    background-color: transparent;\n"
"    border: none;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #03c03c;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #228b22;\n"
"}")
        self.pushButton_frt.setObjectName("pushButton_frt")
        self.gridLayout.addWidget(self.pushButton_frt, 6, 0, 1, 1)
        self.pushButton_rvn = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_rvn.sizePolicy().hasHeightForWidth())
        self.pushButton_rvn.setSizePolicy(sizePolicy)
        self.pushButton_rvn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_rvn.setStyleSheet("QPushButton {\n"
"    background-color: transparent;\n"
"    border: none;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #03c03c;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #228b22;\n"
"}")
        self.pushButton_rvn.setObjectName("pushButton_rvn")
        self.gridLayout.addWidget(self.pushButton_rvn, 7, 3, 1, 1)
        self.pushButton_thr = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_thr.sizePolicy().hasHeightForWidth())
        self.pushButton_thr.setSizePolicy(sizePolicy)
        self.pushButton_thr.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_thr.setStyleSheet("QPushButton {\n"
"    background-color: transparent;\n"
"    border: none;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #03c03c;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #228b22;\n"
"}")
        self.pushButton_thr.setObjectName("pushButton_thr")
        self.gridLayout.addWidget(self.pushButton_thr, 6, 2, 1, 1)
        self.pushButton_sec = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_sec.sizePolicy().hasHeightForWidth())
        self.pushButton_sec.setSizePolicy(sizePolicy)
        self.pushButton_sec.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_sec.setStyleSheet("QPushButton {\n"
"    background-color: transparent;\n"
"    border: none;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #03c03c;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #228b22;\n"
"}")
        self.pushButton_sec.setObjectName("pushButton_sec")
        self.gridLayout.addWidget(self.pushButton_sec, 6, 1, 1, 1)
        self.pushButton_min = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_min.sizePolicy().hasHeightForWidth())
        self.pushButton_min.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Rubik")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_min.setFont(font)
        self.pushButton_min.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_min.setStyleSheet("QPushButton {\n"
"    background-color: transparent;\n"
"    border: none;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #03c03c;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #228b22;\n"
"}")
        self.pushButton_min.setObjectName("pushButton_min")
        self.gridLayout.addWidget(self.pushButton_min, 5, 3, 1, 1)
        self.pushButton_zro = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_zro.sizePolicy().hasHeightForWidth())
        self.pushButton_zro.setSizePolicy(sizePolicy)
        self.pushButton_zro.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_zro.setStyleSheet("QPushButton {\n"
"    background-color: transparent;\n"
"    border: none;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #03c03c;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #228b22;\n"
"}")
        self.pushButton_zro.setObjectName("pushButton_zro")
        self.gridLayout.addWidget(self.pushButton_zro, 7, 0, 1, 1)
        self.pushButton_tchk = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_tchk.sizePolicy().hasHeightForWidth())
        self.pushButton_tchk.setSizePolicy(sizePolicy)
        self.pushButton_tchk.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_tchk.setStyleSheet("QPushButton {\n"
"    background-color: transparent;\n"
"    border: none;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #03c03c;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #228b22;\n"
"}")
        self.pushButton_tchk.setObjectName("pushButton_tchk")
        self.gridLayout.addWidget(self.pushButton_tchk, 7, 1, 1, 1)
        self.pushButton_rst = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_rst.sizePolicy().hasHeightForWidth())
        self.pushButton_rst.setSizePolicy(sizePolicy)
        self.pushButton_rst.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_rst.setStyleSheet("QPushButton {\n"
"    background-color: transparent;\n"
"    border: none;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #03c03c;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #228b22;\n"
"}")
        self.pushButton_rst.setObjectName("pushButton_rst")
        self.gridLayout.addWidget(self.pushButton_rst, 7, 2, 1, 1)
        self.gridLayout_2.addLayout(self.gridLayout, 1, 0, 1, 1)
        self.label = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Rubik")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.gridLayout_2.addWidget(self.label, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Калькулятор"))
        self.pushButton_pls.setText(_translate("MainWindow", "+"))
        self.pushButton_svn.setText(_translate("MainWindow", "7"))
        self.pushButton_svn.setShortcut(_translate("MainWindow", "7"))
        self.pushButton_prh.setText(_translate("MainWindow", "%"))
        self.pushButton_prh.setShortcut(_translate("MainWindow", "%"))
        self.pushButton_ehg.setText(_translate("MainWindow", "8"))
        self.pushButton_ehg.setShortcut(_translate("MainWindow", "8"))
        self.pushButton_nne.setText(_translate("MainWindow", "9"))
        self.pushButton_nne.setShortcut(_translate("MainWindow", "9"))
        self.pushButton_lsk.setText(_translate("MainWindow", "("))
        self.pushButton_lsk.setShortcut(_translate("MainWindow", "("))
        self.pushButton_mlt.setText(_translate("MainWindow", "*"))
        self.pushButton_mlt.setShortcut(_translate("MainWindow", "*"))
        self.pushButton_slesh.setText(_translate("MainWindow", "/"))
        self.pushButton_slesh.setShortcut(_translate("MainWindow", "/"))
        self.pushButton_rsk.setText(_translate("MainWindow", ")"))
        self.pushButton_rsk.setShortcut(_translate("MainWindow", ")"))
        self.pushButton_six.setText(_translate("MainWindow", "6"))
        self.pushButton_six.setShortcut(_translate("MainWindow", "6"))
        self.pushButton_fiv.setText(_translate("MainWindow", "5"))
        self.pushButton_fiv.setShortcut(_translate("MainWindow", "5"))
        self.pushButton_four.setText(_translate("MainWindow", "4"))
        self.pushButton_four.setShortcut(_translate("MainWindow", "4"))
        self.pushButton_frt.setText(_translate("MainWindow", "1"))
        self.pushButton_frt.setShortcut(_translate("MainWindow", "1"))
        self.pushButton_rvn.setText(_translate("MainWindow", "="))
        self.pushButton_rvn.setShortcut(_translate("MainWindow", "="))
        self.pushButton_thr.setText(_translate("MainWindow", "3"))
        self.pushButton_thr.setShortcut(_translate("MainWindow", "3"))
        self.pushButton_sec.setText(_translate("MainWindow", "2"))
        self.pushButton_sec.setShortcut(_translate("MainWindow", "2"))
        self.pushButton_min.setText(_translate("MainWindow", "-"))
        self.pushButton_min.setShortcut(_translate("MainWindow", "-"))
        self.pushButton_zro.setText(_translate("MainWindow", "0"))
        self.pushButton_zro.setShortcut(_translate("MainWindow", "0"))
        self.pushButton_tchk.setText(_translate("MainWindow", "."))
        self.pushButton_tchk.setShortcut(_translate("MainWindow", "."))
        self.pushButton_rst.setText(_translate("MainWindow", "C"))
        self.label.setText(_translate("MainWindow", "<html><head/><body><p align=\"right\"><span style=\" font-size:48pt;\">0</span></p></body></html>"))

      
        self.pushButton_rst.clicked.connect(self.delete)
        self.pushButton_thr.clicked.connect(lambda: self.on_press(self.pushButton_thr.text()))
        self.pushButton_fiv.clicked.connect(lambda: self.on_press(self.pushButton_fiv.text()))
        self.pushButton_four.clicked.connect(lambda: self.on_press(self.pushButton_four.text()))
        self.pushButton_frt.clicked.connect(lambda: self.on_press(self.pushButton_frt.text()))
        self.pushButton_sec.clicked.connect(lambda: self.on_press(self.pushButton_sec.text()))
        self.pushButton_six.clicked.connect(lambda: self.on_press(self.pushButton_six.text()))
        self.pushButton_nne.clicked.connect(lambda: self.on_press(self.pushButton_nne.text()))
        self.pushButton_mlt.clicked.connect(lambda: self.on_press(self.pushButton_mlt.text()))
        self.pushButton_ehg.clicked.connect(lambda: self.on_press(self.pushButton_ehg.text()))
        self.pushButton_lsk.clicked.connect(lambda: self.on_press(self.pushButton_lsk.text()))
        self.pushButton_pls.clicked.connect(lambda: self.on_press(self.pushButton_pls.text()))
        self.pushButton_min.clicked.connect(lambda: self.on_press(self.pushButton_min.text()))
        self.pushButton_rsk.clicked.connect(lambda: self.on_press(self.pushButton_rsk.text()))
        self.pushButton_prh.clicked.connect(lambda: self.on_press(self.pushButton_prh.text()))
        self.pushButton_prh.clicked.connect(self.procent)
        self.pushButton_slesh.clicked.connect(lambda: self.on_press(self.pushButton_slesh.text()))
        self.pushButton_svn.clicked.connect(lambda: self.on_press(self.pushButton_svn.text()))
        self.pushButton_tchk.clicked.connect(lambda: self.on_press(self.pushButton_tchk.text()))
        self.pushButton_zro.clicked.connect(lambda: self.on_press(self.pushButton_zro.text()))
        self.pushButton_rvn.clicked.connect(self.run)
        

        
    def on_press(self, a):
        
        if self.f == '0':
            self.f = ''
        self.f += a
        self.label.setText(self.f)
    def run(self):
        try:
            self.f = self.label.text()
            self.label.setText(str(eval(self.f)))
        except:
            self.label.setText('Инвалид синтаксис')
    def delete(self):
        self.f = self.label.text()
        self.label.setText(str(''))
    def procent(self):
        self.f = self.label.text()
        if self.f == '%':
            self.label.setText(str(eval(self.f)))
